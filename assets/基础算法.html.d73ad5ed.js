import{_ as n,d as s}from"./app.b1fe79c6.js";const a={},p=s(`<div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/x-mathjax-config<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        MathJax<span class="token punctuation">.</span>Hub<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">tex2jax</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">skipTags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;noscript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;textarea&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pre&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">inlineMath</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;$&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;$&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h1 id="ac785-\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#ac785-\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> AC785. \u5FEB\u901F\u6392\u5E8F</h1><p>\u7ED9\u5B9A\u4F60\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u6570\u5217\u3002</p><p>\u8BF7\u4F60\u4F7F\u7528\u5FEB\u901F\u6392\u5E8F\u5BF9\u8FD9\u4E2A\u6570\u5217\u6309\u7167\u4ECE\u5C0F\u5230\u5927\u8FDB\u884C\u6392\u5E8F\u3002</p><p>\u5E76\u5C06\u6392\u597D\u5E8F\u7684\u6570\u5217\u6309\u987A\u5E8F\u8F93\u51FA\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u8F93\u5165\u5171\u4E24\u884C\uFF0C\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$\u4E2A\u6574\u6570\uFF08\u6240\u6709\u6574\u6570\u5747\u5728$1-10^9$ \u8303\u56F4\u5185\uFF09\uFF0C\u8868\u793A\u6574\u4E2A\u6570\u5217\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u8F93\u51FA\u5171\u4E00\u884C\uFF0C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6392\u597D\u5E8F\u7684\u6570\u5217\u3002</p><h4 id="\u6570\u636E\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000$</p><h4 id="\u8F93\u5165\u6837\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5
3 1 2 4 5
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>1 2 3 4 5
</code></pre></div><h4 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h4><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> ac785 <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sortQuick</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sortQuick</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;=</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">=</span> l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">while</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token operator">++</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">;</span>
           <span class="token keyword">while</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token operator">--</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">;</span>    
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">sortQuick</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sortQuick</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac-786-\u7B2Ck\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#ac-786-\u7B2Ck\u4E2A\u6570" aria-hidden="true">#</a> AC 786. \u7B2Ck\u4E2A\u6570</h1><p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u6570\u5217\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u6574\u6570 $k$\uFF0C\u8BF7\u7528\u5FEB\u901F\u9009\u62E9\u7B97\u6CD5\u6C42\u51FA\u6570\u5217\u4ECE\u5C0F\u5230\u5927\u6392\u5E8F\u540E\u7684\u7B2C $k$ \u4E2A\u6570\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-1" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $n$ \u548C $k$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF08\u6240\u6709\u6574\u6570\u5747\u5728$1 \\sim 10^9$ \u8303\u56F4\u5185\uFF09\uFF0C\u8868\u793A\u6574\u6570\u6570\u5217\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-1" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u8F93\u51FA\u4E00\u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6570\u5217\u7684\u7B2C $k$ \u5C0F\u6570\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-1" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-1" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000$ $1\u2264k\u2264n$</p><h4 id="\u8F93\u5165\u6837\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-1" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5 3
2 4 1 5 3
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-1" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> ac786 <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> k <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> out <span class="token operator">=</span> <span class="token function">sortQuick</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">sortQuick</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">=</span> l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token operator">++</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token operator">--</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> sl <span class="token operator">=</span> j <span class="token operator">-</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> sl<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">sortQuick</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token function">sortQuick</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> k <span class="token operator">-</span> sl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac787-\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#ac787-\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> AC787. \u5F52\u5E76\u6392\u5E8F</h1><p>\u7ED9\u5B9A\u4F60\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u6570\u5217\u3002</p><p>\u8BF7\u4F60\u4F7F\u7528\u5F52\u5E76\u6392\u5E8F\u5BF9\u8FD9\u4E2A\u6570\u5217\u6309\u7167\u4ECE\u5C0F\u5230\u5927\u8FDB\u884C\u6392\u5E8F\u3002</p><p>\u5E76\u5C06\u6392\u597D\u5E8F\u7684\u6570\u5217\u6309\u987A\u5E8F\u8F93\u51FA\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-2" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u8F93\u5165\u5171\u4E24\u884C\uFF0C\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF08\u6240\u6709\u6574\u6570\u5747\u5728 $1\\sim 10^9$ \u8303\u56F4\u5185\uFF09\uFF0C\u8868\u793A\u6574\u4E2A\u6570\u5217\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-2" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u8F93\u51FA\u5171\u4E00\u884C\uFF0C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6392\u597D\u5E8F\u7684\u6570\u5217\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-2" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-2" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-2" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5
3 1 2 4 5
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-2" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>1 2 3 4 5
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">merge_sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token operator">:</span>nums<span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token operator">&gt;=</span>r<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token function">merge_sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>l<span class="token punctuation">,</span>mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">merge_sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i<span class="token operator">=</span>l<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>r<span class="token operator">-</span>l<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span> temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>r<span class="token punctuation">)</span> temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span>l<span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>r<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac788-\u9006\u5E8F\u5BF9\u7684\u6570\u91CF" tabindex="-1"><a class="header-anchor" href="#ac788-\u9006\u5E8F\u5BF9\u7684\u6570\u91CF" aria-hidden="true">#</a> AC788. \u9006\u5E8F\u5BF9\u7684\u6570\u91CF</h1><p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u6570\u5217\uFF0C\u8BF7\u4F60\u8BA1\u7B97\u6570\u5217\u4E2D\u7684\u9006\u5E8F\u5BF9\u7684\u6570\u91CF\u3002</p><p>\u9006\u5E8F\u5BF9\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A\u5BF9\u4E8E\u6570\u5217\u7684\u7B2C $i$ \u4E2A\u548C\u7B2C $j$ \u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6EE1\u8DB3 $i&lt;j$ \u4E14 $a[i]&gt;a[j]$\uFF0C\u5219\u5176\u4E3A\u4E00\u4E2A\u9006\u5E8F\u5BF9\uFF1B\u5426\u5219\u4E0D\u662F\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-3" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-3" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$\uFF0C\u8868\u793A\u6570\u5217\u7684\u957F\u5EA6\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6574\u4E2A\u6570\u5217\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-3" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-3" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u8F93\u51FA\u4E00\u4E2A\u6574\u6570\uFF0C\u8868\u793A\u9006\u5E8F\u5BF9\u7684\u4E2A\u6570\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-3" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-3" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000$\uFF0C \u6570\u5217\u4E2D\u7684\u5143\u7D20\u7684\u53D6\u503C\u8303\u56F4 $[1,10^9]$\u3002</p><h4 id="\u8F93\u5165\u6837\u4F8B-3" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-3" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>6
2 3 4 5 6 1
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-3" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-3" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token operator">=</span><span class="token number">100010</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> sum<span class="token operator">=</span><span class="token function">merge_sort</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token operator">&gt;=</span>r<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> sum<span class="token operator">=</span><span class="token function">merge_sort</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span>mid<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">merge_sort</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i<span class="token operator">=</span>l<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>r<span class="token operator">-</span>l<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                sum<span class="token operator">+=</span>mid<span class="token operator">-</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span> temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>r<span class="token punctuation">)</span> temp<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span>l<span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>r<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="\u4E8C\u5206\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u6A21\u677F" aria-hidden="true">#</a> \u4E8C\u5206\u6A21\u677F</h1><p>\u6A21\u677F1\uFF1A \u533A\u95F4 [l,r] \u5212\u5206\u4E3A [l,mid] \u548C [mid+1,r] \u65F6\u4F7F\u7528</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">besearch_1</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> r<span class="token operator">=</span>mid<span class="token punctuation">;</span>
        <span class="token keyword">else</span> l<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6A21\u677F2\uFF1A \u533A\u95F4 [l,r] \u5212\u5206\u4E3A [l,mid-1] \u548C [mid,r] \u65F6\u4F7F\u7528</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">besearch_2</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">chech</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> l<span class="token operator">=</span>mid<span class="token punctuation">;</span>
        <span class="token keyword">else</span> r<span class="token operator">=</span>mid<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac789-\u6570\u7684\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#ac789-\u6570\u7684\u8303\u56F4" aria-hidden="true">#</a> AC789. \u6570\u7684\u8303\u56F4</h1><p>\u5B9A\u4E00\u4E2A\u6309\u7167\u5347\u5E8F\u6392\u5217\u7684\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u6570\u7EC4\uFF0C\u4EE5\u53CA $q$ \u4E2A\u67E5\u8BE2\u3002</p><p>\u5BF9\u4E8E\u6BCF\u4E2A\u67E5\u8BE2\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5143\u7D20 $k$ \u7684\u8D77\u59CB\u4F4D\u7F6E\u548C\u7EC8\u6B62\u4F4D\u7F6E\uFF08\u4F4D\u7F6E\u4ECE $0$ \u5F00\u59CB\u8BA1\u6570\uFF09\u3002</p><p>\u5982\u679C\u6570\u7EC4\u4E2D\u4E0D\u5B58\u5728\u8BE5\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE <code>-1 -1</code>\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-4" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-4" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$ \u548C $q$\uFF0C\u8868\u793A\u6570\u7EC4\u957F\u5EA6\u548C\u8BE2\u95EE\u4E2A\u6570\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF08\u5747\u5728 $1\u223C10000$ \u8303\u56F4\u5185\uFF09\uFF0C\u8868\u793A\u5B8C\u6574\u6570\u7EC4\u3002</p><p>\u63A5\u4E0B\u6765 $q$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E00\u4E2A\u6574\u6570 $k$\uFF0C\u8868\u793A\u4E00\u4E2A\u8BE2\u95EE\u5143\u7D20\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-4" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-4" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171 $q$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6240\u6C42\u5143\u7D20\u7684\u8D77\u59CB\u4F4D\u7F6E\u548C\u7EC8\u6B62\u4F4D\u7F6E\u3002</p><p>\u5982\u679C\u6570\u7EC4\u4E2D\u4E0D\u5B58\u5728\u8BE5\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE <code>-1 -1</code>\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-4" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-4" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000$ $1\u2264q\u226410000$ $1\u2264k\u226410000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-4" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-4" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>6 3
1 2 2 3 3 4
3
4
5
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-4" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-4" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3 4
5 5
-1 -1
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token operator">=</span><span class="token number">100010</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> k<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> left<span class="token operator">=</span><span class="token function">get_left</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">!=</span>k<span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-1 -1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">int</span> right<span class="token operator">=</span><span class="token function">get_right</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>left<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">get_left</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">,</span><span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">&gt;=</span>k<span class="token punctuation">)</span> r<span class="token operator">=</span>mid<span class="token punctuation">;</span>
            <span class="token keyword">else</span> l<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">get_right</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">,</span><span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">&lt;=</span>k<span class="token punctuation">)</span> l<span class="token operator">=</span>mid<span class="token punctuation">;</span>
            <span class="token keyword">else</span> r<span class="token operator">=</span>mid<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac790-\u6570\u7684\u4E09\u6B21\u65B9\u6839" tabindex="-1"><a class="header-anchor" href="#ac790-\u6570\u7684\u4E09\u6B21\u65B9\u6839" aria-hidden="true">#</a> AC790. \u6570\u7684\u4E09\u6B21\u65B9\u6839</h1><p>\u7ED9\u5B9A\u4E00\u4E2A\u6D6E\u70B9\u6570 $n$\uFF0C\u6C42\u5B83\u7684\u4E09\u6B21\u65B9\u6839\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-5" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-5" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B\u4E00\u4E2A\u6D6E\u70B9\u6570 $n$\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-5" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-5" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B\u4E00\u4E2A\u6D6E\u70B9\u6570\uFF0C\u8868\u793A\u95EE\u9898\u7684\u89E3\u3002</p><p>\u6CE8\u610F\uFF0C\u7ED3\u679C\u4FDD\u7559 $6$ \u4F4D\u5C0F\u6570\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-5" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-5" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$\u221210000\u2264n\u226410000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-5" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-5" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>1000.00
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-5" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-5" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>10.000000
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
        <span class="token keyword">double</span> l<span class="token operator">=</span><span class="token operator">-</span><span class="token number">10000</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token operator">&gt;</span><span class="token number">1e-8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">double</span> mid<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">+</span>r<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>mid<span class="token operator">*</span>mid<span class="token operator">*</span>mid<span class="token operator">&gt;</span>n<span class="token punctuation">)</span> r<span class="token operator">=</span>mid<span class="token punctuation">;</span>
            <span class="token keyword">else</span> l<span class="token operator">=</span>mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%.6f&quot;</span><span class="token punctuation">,</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="\u6C42\u5E73\u65B9\u6839" tabindex="-1"><a class="header-anchor" href="#\u6C42\u5E73\u65B9\u6839" aria-hidden="true">#</a> \u6C42\u5E73\u65B9\u6839</h1><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token doc-comment comment">/**
     *
     * <span class="token keyword">@param</span> <span class="token parameter">x</span> int\u6574\u578B
     * <span class="token keyword">@return</span> int\u6574\u578B
     */</span>
    <span class="token keyword">int</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// write code here</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>right <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token comment">//\u5DE6\u53F3\u8FB9\u754C</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>right<span class="token operator">&gt;=</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>right<span class="token operator">+</span>left<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">//\u4E2D\u95F4\u503C</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>mid<span class="token operator">&lt;=</span>x<span class="token operator">/</span>mid<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>x<span class="token operator">/</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> mid<span class="token punctuation">;</span> <span class="token comment">// mid*mid\u53EF\u80FD\u6EA2\u51FA\uFF0C\u6240\u4EE5\u7528\u9664\u6CD5</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>mid<span class="token operator">&gt;</span>x<span class="token operator">/</span>mid<span class="token punctuation">)</span> right <span class="token operator">=</span> mid <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>  left <span class="token operator">=</span> mid <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="lc4-\u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#lc4-\u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570" aria-hidden="true">#</a> LC4. \u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570</h1><p>\u7ED9\u5B9A\u4E24\u4E2A\u5927\u5C0F\u5206\u522B\u4E3A m \u548C n \u7684\u6B63\u5E8F\uFF08\u4ECE\u5C0F\u5230\u5927\uFF09\u6570\u7EC4 nums1 \u548C nums2\u3002\u8BF7\u4F60\u627E\u51FA\u5E76\u8FD4\u56DE\u8FD9\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684 \u4E2D\u4F4D\u6570 \u3002</p><p>\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5E94\u8BE5\u4E3A O(log (m+n)) \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums1 = [1,3], nums2 = [2]
\u8F93\u51FA\uFF1A2.00000
\u89E3\u91CA\uFF1A\u5408\u5E76\u6570\u7EC4 = [1,2,3] \uFF0C\u4E2D\u4F4D\u6570 2
</code></pre></div><p>\u793A\u4F8B 2\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums1 = [1,2], nums2 = [3,4]
\u8F93\u51FA\uFF1A2.50000
\u89E3\u91CA\uFF1A\u5408\u5E76\u6570\u7EC4 = [1,2,3,4] \uFF0C\u4E2D\u4F4D\u6570 (2 + 3) / 2 = 2.5
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num1 <span class="token operator">=</span> <span class="token function">getKth</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token function">getKth</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>num1 <span class="token operator">+</span> num2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getKth</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span> <span class="token keyword">int</span> start1<span class="token punctuation">,</span> <span class="token keyword">int</span> end1<span class="token punctuation">,</span> <span class="token keyword">int</span> start2<span class="token punctuation">,</span> <span class="token keyword">int</span> end2<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len1 <span class="token operator">=</span> end1 <span class="token operator">-</span> start1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len2 <span class="token operator">=</span> end2 <span class="token operator">-</span> start2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>len1 <span class="token operator">&gt;</span> len2<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">getKth</span><span class="token punctuation">(</span>nums2<span class="token punctuation">,</span> nums1<span class="token punctuation">,</span> start2<span class="token punctuation">,</span> end2<span class="token punctuation">,</span> start1<span class="token punctuation">,</span> end1<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>len1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums2<span class="token punctuation">[</span>start2 <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">[</span>start2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> start1 <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>len1<span class="token punctuation">,</span> k <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> start2 <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>len2<span class="token punctuation">,</span> k <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getKth</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> start1<span class="token punctuation">,</span> end1<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end2<span class="token punctuation">,</span> k <span class="token operator">-</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> start2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token function">getKth</span><span class="token punctuation">(</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end1<span class="token punctuation">,</span> start2<span class="token punctuation">,</span> end2<span class="token punctuation">,</span> k <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> start1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac-795-\u524D\u7F00\u548C" tabindex="-1"><a class="header-anchor" href="#ac-795-\u524D\u7F00\u548C" aria-hidden="true">#</a> AC 795. \u524D\u7F00\u548C</h1><p>\u8F93\u5165\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u5E8F\u5217\u3002</p><p>\u63A5\u4E0B\u6765\u518D\u8F93\u5165 $m$ \u4E2A\u8BE2\u95EE\uFF0C\u6BCF\u4E2A\u8BE2\u95EE\u8F93\u5165\u4E00\u5BF9 $l,r$\u3002</p><p>\u5BF9\u4E8E\u6BCF\u4E2A\u8BE2\u95EE\uFF0C\u8F93\u51FA\u539F\u5E8F\u5217\u4E2D\u4ECE\u7B2C $l$ \u4E2A\u6570\u5230\u7B2C $r$ \u4E2A\u6570\u7684\u548C\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-6" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-6" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $n$ \u548C $m$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6574\u6570\u6570\u5217\u3002</p><p>\u63A5\u4E0B\u6765 $m$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $l$ \u548C $r\uFF0C\u8868\u793A\u4E00\u4E2A\u8BE2\u95EE\u7684\u533A\u95F4\u8303\u56F4\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-6" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-6" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171 $m$ \u884C\uFF0C\u6BCF\u884C\u8F93\u51FA\u4E00\u4E2A\u8BE2\u95EE\u7684\u7ED3\u679C\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-6" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-6" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264l\u2264r\u2264n$, $1\u2264n,m\u2264100000,$ $\u22121000\u2264\u6570\u5217\u4E2D\u5143\u7D20\u7684\u503C\u22641000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-6" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-6" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5 3
2 1 3 6 4
1 2
1 3
2 4
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-6" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-6" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3
6
10
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> y<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">-</span>s<span class="token punctuation">[</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac796-\u5B50\u77E9\u9635\u7684\u548C" tabindex="-1"><a class="header-anchor" href="#ac796-\u5B50\u77E9\u9635\u7684\u548C" aria-hidden="true">#</a> AC796. \u5B50\u77E9\u9635\u7684\u548C</h1><p>\u8F93\u5165\u4E00\u4E2A $n$ \u884C $m$ \u5217\u7684\u6574\u6570\u77E9\u9635\uFF0C\u518D\u8F93\u5165 $q$ \u4E2A\u8BE2\u95EE\uFF0C\u6BCF\u4E2A\u8BE2\u95EE\u5305\u542B\u56DB\u4E2A\u6574\u6570 $x_1,y_1,x_2,y_2$\uFF0C\u8868\u793A\u4E00\u4E2A\u5B50\u77E9\u9635\u7684\u5DE6\u4E0A\u89D2\u5750\u6807\u548C\u53F3\u4E0B\u89D2\u5750\u6807\u3002</p><p>\u5BF9\u4E8E\u6BCF\u4E2A\u8BE2\u95EE\u8F93\u51FA\u5B50\u77E9\u9635\u4E2D\u6240\u6709\u6570\u7684\u548C\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-7" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-7" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E09\u4E2A\u6574\u6570$ n\uFF0Cm\uFF0Cq\u3002$</p><p>\u63A5\u4E0B\u6765 $n$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B $m$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6574\u6570\u77E9\u9635\u3002</p><p>\u63A5\u4E0B\u6765 $q$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u56DB\u4E2A\u6574\u6570 $x_1,y_1,x_2,y_2$\uFF0C\u8868\u793A\u4E00\u7EC4\u8BE2\u95EE\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-7" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-7" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171 $q$ \u884C\uFF0C\u6BCF\u884C\u8F93\u51FA\u4E00\u4E2A\u8BE2\u95EE\u7684\u7ED3\u679C\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-7" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-7" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n,m\u22641000,$ $1\u2264q\u2264200000,$ $1\u2264x1\u2264x2\u2264n,$ $1\u2264y1\u2264y2\u2264m,$ \u2212$1000\u2264\u77E9\u9635\u5185\u5143\u7D20\u7684\u503C\u22641000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-7" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-7" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3 4 3
1 7 2 4
3 6 2 8
2 1 2 3
1 1 2 2
2 1 3 4
1 3 3 4
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-7" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-7" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>17
27
21
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> q<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x1<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> y1<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> x2<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> y2<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token operator">-</span>dp<span class="token punctuation">[</span>x1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token operator">-</span>dp<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>x1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h1 id="ac-797-\u5DEE\u5206" tabindex="-1"><a class="header-anchor" href="#ac-797-\u5DEE\u5206" aria-hidden="true">#</a> AC 797. \u5DEE\u5206</h1><p>a1,a2,a3,...,an -&gt; \u6784\u9020\uFF1Ab1,b2,b3,...,bn</p><p>\u4F7F\u5F97ai=b1+b2+b3+...+bi;</p><p>b1=a1,b2=a2-a1,b3=a3-a2</p><p>\u8F93\u5165\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u5E8F\u5217\u3002</p><p>\u63A5\u4E0B\u6765\u8F93\u5165 $m$ \u4E2A\u64CD\u4F5C\uFF0C\u6BCF\u4E2A\u64CD\u4F5C\u5305\u542B\u4E09\u4E2A\u6574\u6570 $l,r,c$ \u8868\u793A\u5C06\u5E8F\u5217\u4E2D $[l,r]$ \u4E4B\u95F4\u7684\u6BCF\u4E2A\u6570\u52A0\u4E0A $c$\u3002</p><p>\u8BF7\u4F60\u8F93\u51FA\u8FDB\u884C\u5B8C\u6240\u6709\u64CD\u4F5C\u540E\u7684\u5E8F\u5217\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-8" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-8" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $n$ \u548C $m$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6574\u6570\u5E8F\u5217\u3002</p><p>\u63A5\u4E0B\u6765 $m$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E09\u4E2A\u6574\u6570 $ l\uFF0Cr\uFF0Cc$ \u8868\u793A\u4E00\u4E2A\u64CD\u4F5C\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-8" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-8" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6700\u7EC8\u5E8F\u5217\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-8" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-8" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n,m\u2264100000,$ $1\u2264l\u2264r\u2264n,$ $\u22121000\u2264c\u22641000,$ $\u22121000\u2264\u6574\u6570\u5E8F\u5217\u4E2D\u5143\u7D20\u7684\u503C\u22641000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-8" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-8" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>6 3
1 2 2 1 2 1
1 3 1
3 5 1
1 6 1
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-8" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-8" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3 4 5 3 4 2
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
           <span class="token comment">// System.out.print(s[i]+&quot; &quot;);</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//System.out.println();</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> left<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> right<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> x<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">+=</span>x<span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>right<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-=</span>x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+=</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac-798-\u5DEE\u5206\u77E9\u9635" tabindex="-1"><a class="header-anchor" href="#ac-798-\u5DEE\u5206\u77E9\u9635" aria-hidden="true">#</a> AC 798. \u5DEE\u5206\u77E9\u9635</h1><p>\u8F93\u5165\u4E00\u4E2A $n$ \u884C $m$ \u5217\u7684\u6574\u6570\u77E9\u9635\uFF0C\u518D\u8F93\u5165 $q$ \u4E2A\u64CD\u4F5C\uFF0C\u6BCF\u4E2A\u64CD\u4F5C\u5305\u542B\u4E94\u4E2A\u6574\u6570 $x_1,y_1,x_2,y_2,c$ \u5176\u4E2D $(x_1,y_1)$\u548C$ (x_2,y_2) $ \u8868\u793A\u4E00\u4E2A\u5B50\u77E9\u9635\u7684\u5DE6\u4E0A\u89D2\u5750\u6807\u548C\u53F3\u4E0B\u89D2\u5750\u6807\u3002</p><p>\u6BCF\u4E2A\u64CD\u4F5C\u90FD\u8981\u5C06\u9009\u4E2D\u7684\u5B50\u77E9\u9635\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u7684\u503C\u52A0\u4E0A $c$\u3002</p><p>\u8BF7\u4F60\u5C06\u8FDB\u884C\u5B8C\u6240\u6709\u64CD\u4F5C\u540E\u7684\u77E9\u9635\u8F93\u51FA\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-9" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-9" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n,m,q\u3002$</p><p>\u63A5\u4E0B\u6765 $n$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B $m$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6574\u6570\u77E9\u9635\u3002</p><p>\u63A5\u4E0B\u6765 $q$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B 5 \u4E2A\u6574\u6570 $x_1,y_1,x_2,y_2,c$\uFF0C\u8868\u793A\u4E00\u4E2A\u64CD\u4F5C\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-9" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-9" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171 $n$ \u884C\uFF0C\u6BCF\u884C $m$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6240\u6709\u64CD\u4F5C\u8FDB\u884C\u5B8C\u6BD5\u540E\u7684\u6700\u7EC8\u77E9\u9635\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-9" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-9" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n,m\u22641000,$ $1\u2264q\u2264100000,$ $1\u2264x1\u2264x2\u2264n,$ $1\u2264y1\u2264y2\u2264m,$ $\u22121000\u2264c\u22641000,$ $\u22121000\u2264\u77E9\u9635\u5185\u5143\u7D20\u7684\u503C\u22641000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-9" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-9" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3 4 3
1 2 2 1
3 2 2 1
1 1 1 1
1 1 2 2 1
1 3 2 3 2
3 1 3 4 1
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-9" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-9" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>2 3 4 1
4 3 4 1
2 2 2 2
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> q<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">insert</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x1<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> y1<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> x2<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> y2<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> c<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">insert</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+=</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">,</span><span class="token keyword">int</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> c<span class="token punctuation">)</span><span class="token punctuation">{</span>
        s<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token operator">+=</span>c<span class="token punctuation">;</span>
        s<span class="token punctuation">[</span>x2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token operator">-=</span>c<span class="token punctuation">;</span>
        s<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-=</span>c<span class="token punctuation">;</span>
        s<span class="token punctuation">[</span>x2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+=</span>c<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac799-\u6700\u957F\u8FDE\u7EED\u4E0D\u91CD\u590D\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#ac799-\u6700\u957F\u8FDE\u7EED\u4E0D\u91CD\u590D\u5B50\u5E8F\u5217" aria-hidden="true">#</a> AC799. \u6700\u957F\u8FDE\u7EED\u4E0D\u91CD\u590D\u5B50\u5E8F\u5217</h1><p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u5E8F\u5217\uFF0C\u8BF7\u627E\u51FA\u6700\u957F\u7684\u4E0D\u5305\u542B\u91CD\u590D\u7684\u6570\u7684\u8FDE\u7EED\u533A\u95F4\uFF0C\u8F93\u51FA\u5B83\u7684\u957F\u5EA6\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-10" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-10" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF08\u5747\u5728 $0\u223C10^5$ \u8303\u56F4\u5185\uFF09\uFF0C\u8868\u793A\u6574\u6570\u5E8F\u5217\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-10" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-10" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B\u4E00\u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6700\u957F\u7684\u4E0D\u5305\u542B\u91CD\u590D\u7684\u6570\u7684\u8FDE\u7EED\u533A\u95F4\u7684\u957F\u5EA6\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-10" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-10" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u226410^5$</p><h4 id="\u8F93\u5165\u6837\u4F8B-10" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-10" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5
1 2 2 3 5
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-10" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-10" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> left<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> max<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                left<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            max<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>i<span class="token operator">-</span>left<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h1 id="ac800-\u6570\u7EC4\u5143\u7D20\u7684\u76EE\u6807\u548C" tabindex="-1"><a class="header-anchor" href="#ac800-\u6570\u7EC4\u5143\u7D20\u7684\u76EE\u6807\u548C" aria-hidden="true">#</a> AC800. \u6570\u7EC4\u5143\u7D20\u7684\u76EE\u6807\u548C</h1><p>\u7ED9\u5B9A\u4E24\u4E2A\u5347\u5E8F\u6392\u5E8F\u7684\u6709\u5E8F\u6570\u7EC4 $A$ \u548C $B$\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u76EE\u6807\u503C $x$\u3002</p><p>\u6570\u7EC4\u4E0B\u6807\u4ECE $0$ \u5F00\u59CB\u3002</p><p>\u8BF7\u4F60\u6C42\u51FA\u6EE1\u8DB3 $A[i]+B[j]=x$ \u7684\u6570\u5BF9$ (i,j)$\u3002</p><p>\u6570\u636E\u4FDD\u8BC1\u6709\u552F\u4E00\u89E3\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-11" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-11" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E09\u4E2A\u6574\u6570 $n,m,x\uFF0C$\u5206\u522B\u8868\u793A $A$ \u7684\u957F\u5EA6\uFF0C$B$ \u7684\u957F\u5EA6\u4EE5\u53CA\u76EE\u6807\u503C $x$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6570\u7EC4 $A$\u3002</p><p>\u7B2C\u4E09\u884C\u5305\u542B $m$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6570\u7EC4 $B$\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-11" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-11" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $i$ \u548C $j$\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-11" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-11" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>\u6570\u7EC4\u957F\u5EA6\u4E0D\u8D85\u8FC7 $10^5$\u3002 \u540C\u4E00\u6570\u7EC4\u5185\u5143\u7D20\u5404\u4E0D\u76F8\u540C\u3002 $1\u2264\u6570\u7EC4\u5143\u7D20\u226410^9$</p><h4 id="\u8F93\u5165\u6837\u4F8B-11" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-11" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>4 5 6
1 2 4 7
3 4 6 8 9
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-11" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-11" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>1 1
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span>x<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&gt;</span>x<span class="token punctuation">)</span> j<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="ac-2816-\u5224\u65AD\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#ac-2816-\u5224\u65AD\u5B50\u5E8F\u5217" aria-hidden="true">#</a> AC 2816. \u5224\u65AD\u5B50\u5E8F\u5217</h1><p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6574\u6570\u5E8F\u5217 $a_1,a_2,\u2026,a_n$ \u4EE5\u53CA\u4E00\u4E2A\u957F\u5EA6\u4E3A $m$ \u7684\u6574\u6570\u5E8F\u5217 $b_1,b_2,\u2026,b_m$\u3002</p><p>\u8BF7\u4F60\u5224\u65AD $a$ \u5E8F\u5217\u662F\u5426\u4E3A $b$ \u5E8F\u5217\u7684\u5B50\u5E8F\u5217\u3002</p><p>\u5B50\u5E8F\u5217\u6307\u5E8F\u5217\u7684\u4E00\u90E8\u5206\u9879\u6309<strong>\u539F\u6709\u6B21\u5E8F\u6392\u5217</strong>\u800C\u5F97\u7684\u5E8F\u5217\uFF0C\u4F8B\u5982\u5E8F\u5217 \${a_1,a_3,a_5}$ \u662F\u5E8F\u5217$ {a_1,a_2,a_3,a_4,a_5}$ \u7684\u4E00\u4E2A\u5B50\u5E8F\u5217\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-12" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-12" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $n,m$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A $a1,a2,\u2026,an$\u3002</p><p>\u7B2C\u4E09\u884C\u5305\u542B $m$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A $b1,b2,\u2026,bm$\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-12" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-12" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5982\u679C $a$ \u5E8F\u5217\u662F $b$ \u5E8F\u5217\u7684\u5B50\u5E8F\u5217\uFF0C\u8F93\u51FA\u4E00\u884C <code>Yes</code>\u3002</p><p>\u5426\u5219\uFF0C\u8F93\u51FA <code>No</code>\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-12" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-12" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264m\u226410^5,$ $\u221210^9\u2264a_i,b_i\u226410^9$</p><h4 id="\u8F93\u5165\u6837\u4F8B-12" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-12" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3 5
1 3 5
1 2 3 4 5
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-12" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-12" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>Yes
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;</span>n<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;</span>m<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>i<span class="token operator">++</span><span class="token punctuation">;</span>
            j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>n<span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Yes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;No&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F4D\u8FD0\u7B97 AC 801. \u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A $n$ \u7684\u6570\u5217\uFF0C\u8BF7\u4F60\u6C42\u51FA\u6570\u5217\u4E2D\u6BCF\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D $1$ \u7684\u4E2A\u6570\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-13" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-13" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$\u3002</p><p>\u7B2C\u4E8C\u884C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u8868\u793A\u6574\u4E2A\u6570\u5217\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-13" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-13" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B $n$ \u4E2A\u6574\u6570\uFF0C\u5176\u4E2D\u7684\u7B2C $i$ \u4E2A\u6570\u8868\u793A\u6570\u5217\u4E2D\u7684\u7B2C $i$ \u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D $1$ \u7684\u4E2A\u6570\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-13" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-13" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000,$ $0\u2264\u6570\u5217\u4E2D\u5143\u7D20\u7684\u503C\u226410^9$</p><h4 id="\u8F93\u5165\u6837\u4F8B-13" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-13" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5
1 2 3 4 5
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-13" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-13" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>1 1 2 1 2
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>x<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> count<span class="token operator">++</span><span class="token punctuation">;</span>
                x<span class="token operator">=</span>x<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="\u533A\u95F4\u548C-ac802-\u533A\u95F4\u548C" tabindex="-1"><a class="header-anchor" href="#\u533A\u95F4\u548C-ac802-\u533A\u95F4\u548C" aria-hidden="true">#</a> \u533A\u95F4\u548C AC802. \u533A\u95F4\u548C</h1><p>\u5047\u5B9A\u6709\u4E00\u4E2A\u65E0\u9650\u957F\u7684\u6570\u8F74\uFF0C\u6570\u8F74\u4E0A\u6BCF\u4E2A\u5750\u6807\u4E0A\u7684\u6570\u90FD\u662F $0$\u3002</p><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u9996\u5148\u8FDB\u884C $n$ \u6B21\u64CD\u4F5C\uFF0C\u6BCF\u6B21\u64CD\u4F5C\u5C06\u67D0\u4E00\u4F4D\u7F6E $x$ \u4E0A\u7684\u6570\u52A0 $c$\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C\u8FDB\u884C $m$ \u6B21\u8BE2\u95EE\uFF0C\u6BCF\u4E2A\u8BE2\u95EE\u5305\u542B\u4E24\u4E2A\u6574\u6570 $l$ \u548C $r$\uFF0C\u4F60\u9700\u8981\u6C42\u51FA\u5728\u533A\u95F4 $[l,r]$ \u4E4B\u95F4\u7684\u6240\u6709\u6570\u7684\u548C\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-14" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-14" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $n$ \u548C $m$\u3002</p><p>\u63A5\u4E0B\u6765 $m$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $x$ \u548C $c$\u3002</p><p>\u518D\u63A5\u4E0B\u6765 $m$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $l$ \u548C $r$\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-14" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-14" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171 $m$ \u884C\uFF0C\u6BCF\u884C\u8F93\u51FA\u4E00\u4E2A\u8BE2\u95EE\u4E2D\u6240\u6C42\u7684\u533A\u95F4\u5185\u6570\u5B57\u548C\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-14" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-14" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$\u221210^9\u2264x\u226410^9$ $1\u2264n,m\u226410^5$ $\u221210^9\u2264l\u2264r\u226410^9$ $\u221210000\u2264c\u226410000$</p><h4 id="\u8F93\u5165\u6837\u4F8B-14" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-14" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3 3
1 2
3 6
7 5
1 3
4 6
7 8
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-14" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-14" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>8
0
5
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token keyword">static</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> alls<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> adds<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> query<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> c<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            adds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>x<span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> l<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> r<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            query<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>l<span class="token punctuation">,</span>r<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token operator">:</span>set<span class="token punctuation">)</span> alls<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>alls<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token operator">:</span>alls<span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>alls<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>alls<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> add<span class="token operator">:</span>adds<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>add<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">+=</span>add<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> que<span class="token operator">:</span>query<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> l<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>que<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> r<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>que<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">-</span>s<span class="token punctuation">[</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>r<span class="token operator">=</span>alls<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid<span class="token operator">=</span>l<span class="token operator">+</span>r<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>alls<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token operator">&gt;=</span>x<span class="token punctuation">)</span> r<span class="token operator">=</span>mid<span class="token punctuation">;</span>
            <span class="token keyword">else</span> l<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> r<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="\u5408\u5E76\u533A\u95F4-ac803-\u533A\u95F4\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u533A\u95F4-ac803-\u533A\u95F4\u5408\u5E76" aria-hidden="true">#</a> \u5408\u5E76\u533A\u95F4 AC803. \u533A\u95F4\u5408\u5E76</h1><p>\u7ED9\u5B9A $n$ \u4E2A\u533A\u95F4 $[l_i,r_i]$\uFF0C\u8981\u6C42\u5408\u5E76\u6240\u6709\u6709\u4EA4\u96C6\u7684\u533A\u95F4\u3002</p><p>\u6CE8\u610F\u5982\u679C\u5728\u7AEF\u70B9\u5904\u76F8\u4EA4\uFF0C\u4E5F\u7B97\u6709\u4EA4\u96C6\u3002</p><p>\u8F93\u51FA\u5408\u5E76\u5B8C\u6210\u540E\u7684\u533A\u95F4\u4E2A\u6570\u3002</p><p>\u4F8B\u5982\uFF1A$[1,3]$ \u548C $[2,6]$ \u53EF\u4EE5\u5408\u5E76\u4E3A\u4E00\u4E2A\u533A\u95F4 $[1,6]$\u3002</p><h4 id="\u8F93\u5165\u683C\u5F0F-15" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u683C\u5F0F-15" aria-hidden="true">#</a> \u8F93\u5165\u683C\u5F0F</h4><p>\u7B2C\u4E00\u884C\u5305\u542B\u6574\u6570 $n$\u3002</p><p>\u63A5\u4E0B\u6765 $n$ \u884C\uFF0C\u6BCF\u884C\u5305\u542B\u4E24\u4E2A\u6574\u6570 $l$ \u548C $r$\u3002</p><h4 id="\u8F93\u51FA\u683C\u5F0F-15" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u683C\u5F0F-15" aria-hidden="true">#</a> \u8F93\u51FA\u683C\u5F0F</h4><p>\u5171\u4E00\u884C\uFF0C\u5305\u542B\u4E00\u4E2A\u6574\u6570\uFF0C\u8868\u793A\u5408\u5E76\u533A\u95F4\u5B8C\u6210\u540E\u7684\u533A\u95F4\u4E2A\u6570\u3002</p><h4 id="\u6570\u636E\u8303\u56F4-15" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4-15" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h4><p>$1\u2264n\u2264100000$ $\u221210^9\u2264l_i\u2264r_i\u226410^9$</p><h4 id="\u8F93\u5165\u6837\u4F8B-15" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6837\u4F8B-15" aria-hidden="true">#</a> \u8F93\u5165\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>5
1 2
2 4
5 6
7 8
7 9
</code></pre></div><h4 id="\u8F93\u51FA\u6837\u4F8B-15" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6837\u4F8B-15" aria-hidden="true">#</a> \u8F93\u51FA\u6837\u4F8B\uFF1A</h4><div class="language-text ext-text"><pre class="language-text"><code>3
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> ed<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x<span class="token operator">:</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>ed<span class="token operator">&lt;</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                ed<span class="token operator">=</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                ed<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>ed<span class="token punctuation">,</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,278);function t(o,e){return p}var u=n(a,[["render",t],["__file","\u57FA\u7840\u7B97\u6CD5.html.vue"]]);export{u as default};
